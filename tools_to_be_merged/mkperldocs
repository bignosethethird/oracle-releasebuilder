#!/bin/bash
#
#
# This script creates HTML documentation of all Perl Scripts (.pl and .pm
# extensions) in the current working directory. Only perl scripts that have
# embedded POD in them (POD="Plain Old Documentation", not "Prince Of
# Darkness") are considered.
#
# The current working directory is the directory that all the scripts and
# packages are in. It creates a doc directory off the current directory and
# writes the resulting HTML files and a cascading style sheet (CSS) in there.
#
# A default CSS is embedded in this script, based on the one used in CPAN.
# You can specify the location of your own CSS file.
#
# Each Perl script is briefly checked for documentation syntax. Since this
# is a 'best endevours' script, it will do its best to create an output.
#
if [[ -z $1 || $1 == "--help" ]]; then
  cat <<EOF
Usage:
   $ cd {Perl scripts directory}
   $ mkperldocs [PROJECT_NAME] [CSS_FILE_PATH]

      - where PROJECT_NAME  is your designated name of the project.
              CSS_FILE_PATH is the optional style sheet.
                            It defaults to an embedded style sheet.
Example:
    $ mkperldocs VCR vcr.css

      - creates .html files in the ./doc directory that use the vcr.css
        stylesheet.

EOF
  exit 1
fi

# Change the name of the project in this variable:
PROJ_NAME=$1
[[ -z $PROJ_NAME ]] && PROJ_NAME=$(id | sed -e 's/.*(\(.*\)).*\((.*)\)/\1/')

# The directory in which to create the documentation
DOC_DIR="doc"
# Names of utilities that should be on the path.
POD2HTML="pod2html"
PODCHECKER="podchecker"


function MakeCSS {
cat > $DOC_DIR/$CSS_FILE <<- EOF
  BODY {
   font-family: Arial,Helvetica;
  }

  BLOCKQUOTE { margin: 10pt;  }

  H1,A { color: #336699; }


  /*** Top menu style ****/
  .mmenuon {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #ff6600; font-size: 10pt;
   }
  .mmenuoff {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #ffffff; font-size: 10pt;
  }
  .cpyright {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #ffffff; font-size: xx-small;
  }
  .cpyrightText {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #ffffff; font-size: xx-small;
  }
  .sections {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: 11pt;
  }
  .dsections {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: 12pt;
  }
  .slink {
   font-family: Arial,Helvetica; font-weight: normal; text-decoration: none;
   color: #000000; font-size: 9pt;
  }

  .slink2 { font-family: Arial,Helvetica; text-decoration: none; color: #336699; }

  .maintitle {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: 18pt;
  }
  .dblArrow {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: small;
  }
  .menuSec {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: small;
  }

  .newstext {
   font-family: Arial,Helvetica; font-size: small;
  }

  .linkmenu {
   font-family: Arial,Helvetica; color: #000000; font-weight: bold;
   text-decoration: none;
  }

  P {
   font-family: Arial,Helvetica;
  }

  PRE {
      font-size: 10pt;
  }
  .quote {
   font-family: Times; text-decoration: none;
   color: #000000; font-size: 9pt; font-style: italic;
  }
  .smstd { font-family: Arial,Helvetica; color: #000000; font-size: x-small; }
  .std { font-family: Arial,Helvetica; color: #000000; }
  .meerkatTitle {
   font-family: sans-serif; font-size: x-small;  color: black;    }

  .meerkatDescription { font-family: sans-serif; font-size: 10pt; color: black }
  .meerkatCategory {
   font-family: sans-serif; font-size: 9pt; font-weight: bold; font-style: italic;
   color: brown; }
  .meerkatChannel {
   font-family: sans-serif; font-size: 9pt; font-style: italic; color: brown; }
  .meerkatDate { font-family: sans-serif; font-size: xx-small; color: #336699; }

  .tocTitle {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #333333; font-size: 10pt;
  }

  .toc-item {
   font-family: Arial,Helvetica; font-weight: bold;
   color: #336699; font-size: 10pt; text-decoration: underline;
  }

  .perlVersion {
   font-family: Arial,Helvetica; font-weight: bold;
   color: #336699; font-size: 10pt; text-decoration: none;
  }

  .podTitle {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #000000;
  }

  .docTitle {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #000000; font-size: 10pt;
  }
  .dotDot {
   font-family: Arial,Helvetica; font-weight: bold;
   color: #000000; font-size: 9pt;
  }

  .docSec {
   font-family: Arial,Helvetica; font-weight: normal;
   color: #333333; font-size: 9pt;
  }
  .docVersion {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: 10pt;
  }

  .docSecs-on {
   font-family: Arial,Helvetica; font-weight: normal; text-decoration: none;
   color: #ff0000; font-size: 10pt;
  }
  .docSecs-off {
   font-family: Arial,Helvetica; font-weight: normal; text-decoration: none;
   color: #333333; font-size: 10pt;
  }

  h2 {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: medium;
  }
  h1 {
   font-family: Verdana,Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: large;
  }

  DL {
   font-family: Arial,Helvetica; font-weight: normal; text-decoration: none;
   color: #333333; font-size: 10pt;
  }

  UL > LI > A {
   font-family: Arial,Helvetica; font-weight: bold;
   color: #336699; font-size: 10pt;
  }

  .moduleInfo {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #333333; font-size: 11pt;
  }

  .moduleInfoSec {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: 10pt;
  }

  .moduleInfoVal {
   font-family: Arial,Helvetica; font-weight: normal; text-decoration: underline;
   color: #000000; font-size: 10pt;
  }

  .cpanNavTitle {
   font-family: Arial,Helvetica; font-weight: bold;
   color: #ffffff; font-size: 10pt;
  }
  .cpanNavLetter {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #333333; font-size: 9pt;
  }
  .cpanCat {
   font-family: Arial,Helvetica; font-weight: bold; text-decoration: none;
   color: #336699; font-size: 9pt;
  }

  .bttndrkblue-bkgd-top {
    background-color: #225688;
    background-image: url(/global/mvc_objects/images/bttndrkblue_bgtop.gif);
  }
  .bttndrkblue-bkgd-left {
    background-color: #225688;
    background-image: url(/global/mvc_objects/images/bttndrkblue_bgleft.gif);
  }
  .bttndrkblue-bkgd {
    padding-top: 0px;
    padding-bottom: 0px;
    margin-bottom: 0px;
    margin-top: 0px;
    background-repeat: no-repeat;
    background-color: #225688;
    background-image: url(/global/mvc_objects/images/bttndrkblue_bgmiddle.gif);
    vertical-align: top;
  }
  .bttndrkblue-bkgd-right {
    background-color: #225688;
    background-image: url(/global/mvc_objects/images/bttndrkblue_bgright.gif);
  }
  .bttndrkblue-bkgd-bottom {
    background-color: #225688;
    background-image: url(/global/mvc_objects/images/bttndrkblue_bgbottom.gif);
  }
  .bttndrkblue-text a {
    color: #ffffff;
    text-decoration: none;
  }
  a.bttndrkblue-text:hover {
    color: #ffDD3C;
    text-decoration: none;
  }
  .bg-ltblue {
    background-color: #f0f5fa;
  }

  .border-left-b {
    background: #f0f5fa url(/i/corner-leftline.gif) repeat-y;
  }

  .border-right-b {
    background: #f0f5fa url(/i/corner-rightline.gif) repeat-y;
  }

  .border-top-b {
    background: #f0f5fa url(/i/corner-topline.gif) repeat-x;
  }

  .border-bottom-b {
    background: #f0f5fa url(/i/corner-botline.gif) repeat-x;
  }

  .border-right-w {
    background: #ffffff url(/i/corner-rightline.gif) repeat-y;
  }

  .border-top-w {
    background: #ffffff url(/i/corner-topline.gif) repeat-x;
  }

  .border-bottom-w {
    background: #ffffff url(/i/corner-botline.gif) repeat-x;
  }

  .bg-white {
    background-color: #ffffff;
  }

  .border-left-w {
    background: #ffffff url(/i/corner-leftline.gif) repeat-y;
  }
EOF
  return 0
}


# Parameters:
# 1: Input  file name
# 2: Output file name
function DocumentScript {
  print -n "Checking syntax for $1..."
  # Check syntax
  $PODCHECKER $1 2> /dev/null
  if [[ $? -eq 0 ]]; then
    print "yes"
  elif [[ $? -eq 1 ]]; then
    print "syntax errors"
  else
    print "no documentation found." && return 1
  fi

  print -n "Creating $DOC_DIR/$2..."
  pod2html --infile=$1 --title=$PROJ_NAME --backlink=Top --css=$CSS_FILE --outfile=$DOC_DIR/$2
  if [[ $? -ne 0 ]]; then
    print "failed. Exiting..." && exit 1
  fi
  print "done"
  return 0
}


# Main
print -n "Checking for pod2html utility..."
if [[ $(which $POD2HTML | grep "^no ") -ne "" ]]; then
  print "Could not find the pod2html utility. Ensure that it is on your path.\nExiting..." && exit 1
else
  print "yes"
  print -n "Checking for podchecker utility..."
  if [[ $(which $PODCHECKER | grep "^no ") -ne "" ]]; then
    print "Could not find the podchecker utility. Ensure that it is on your path.\nExiting..." && exit 1
  else
    print "yes"
    print -n "Checking target directory..."
    if [[ ! -d $DOC_DIR ]]; then
      mkdir -p $DOC_DIR
      if [[ $? -ne 0 ]]; then
        print "failed. Exiting..." && exit 1
      fi
    else
      if [[ ! -w $DOC_DIR ]]; then
        print "failed. Exiting..." && exit 1
      fi
    fi
    print "yes"

    CSS_FILE=$2
    if [[ ! -a $CSS_FILE  || -z $CSS_FILE ]]; then
      [[ ! -a $CSS_FILE && -n $CSS_FILE ]] && print -n "Stylesheet file $CSS_FILE not found. "
      CSS_FILE=$PROJ_NAME.css
      print -n "Creating stylesheet..."
      if [[ $(MakeCSS) -ne 0 ]]; then
        print "failed. Exiting..." && exit 1
      fi
      print "done"
    else
      print -n "Loading supplied CSS file..."
      cp $CSS_FILE $DOC_DIR
      CSS_FILE=${CSS_FILE##*/}
      print "done"
    fi

    for FILE in $(ls *.pl 2>/dev/null | sort); do
      HTML_FILE=$(print $(basename $FILE) | sed -e 's/\..*//').html
      DocumentScript $FILE $HTML_FILE
    done

    for FILE in $(ls *.pm 2>/dev/null | sort); do
      HTML_FILE=$(print $(basename $FILE) | sed -e 's/\..*//')Package.html
      DocumentScript $FILE $HTML_FILE
    done

    # Remove leftover bits from failed conversions
    rm -f *.x~~
    rm -f pod2h*.tmp
  fi
fi

