Troubleshooting Guide
=====================

[ $Header: $ ]

Description
-----------
This guide lists various problem scenarios (in no particular order) and
attempts in each case to lead the reader through a logical series of actions
to resolve the particular problem. The list of problems is not exhaustive
(since that would be impossible), nor are the suggested steps the only actions
that should be taken to resolve a problem.

Contents:
---------
1.  CSV file generation does not work
2.  CSV file retrieval does not want to retrieve the given URL
3.  Can't view log files
4.  Too many / too few logfiles are kept
5.  Log file rotation does not seem to work
6.  Oracle service control script does not work
7.  Cannot start up the Oracle database
8.  Oracle system commands do not work
9.  Cannot connect to remote database
10. I get an error message that I don't understand
11. Cannot connect remotely over SSH
12. Cannot start a remote X-Windows session on a Windows PC
13. Install scripts do not want to run

1. CSV file generation does not work
--------------
1.1 CSV files (or any flat files generated by the database application) are
    created in the directory $ORACLE_BASE/admin/$ORACLE_SID/reports, where
    $ORACLE_BASE is mostly /u01/app/oracle. and $ORACLE_SID is the name of the
    the database instance. This directory should exist and should have read and
    write access by the Unix Oracle Administrator user - mostly called 'oracle'.

    Also, an Oracle directory object pointing to this directgory should exist.

1.2 The init.ora file (or similar) should contain entries granting the
    UTL_FILE PL/SQL package access this directory. Make sure an entry similar
    to the following appears in init.ora:
    UTL_FILE_DIR = /u01/app/oracle/admin/<instance_name>/reports

1.3 If you changed an entry in the init.ora file, you may have to restart
    the oracle instance as follows as user 'oracle':

      $ export ORACLE_SID=<instance_name>
      $ sqlplus / as sysdba
      SQL> shutdown immediate
      SQL> startup
      SQL> quit

2. CSV file retrieval does not want to retrieve the given URL
--------------
2.1 The processes that create CSV files return absolute URL to the generated
    files in the form http://<server_name>/reports/<csv_file_name.csv>.
    The delivery of these files is dependent on the http-server on the host
    being correctly configured and running.

2.2 Start the http-server on the host as user 'root':

      $ /etc/init.d/httpd start

    You should now be able to point an internet browser to the server and see
    a test page.

2.3 Create a symbolic link to the reports directory as user 'oracle':

      $ su
      Password:
      $ ln -s $ORACLE_BASE/admin/$ORACLE_SID/reports /var/www/html/reports
      $ exit

    Enter the password for user 'root' when prompted. It is assumed that the
    environement variables $ORACLE_BASE and $ORACLE_SID are set up in user
    'oracle''s shell.

3. Can't view log files
--------------
3.1 Log files are created in the $ORACLE_BASE/admin/$ORACLE_SID/reports
    directory and the most recent file is mostly called 'events'.
    The current activities on the system can be viewed by typing:

      $ tail -f $ORACLE_BASE/admin/$ORACLE_SID/reports/events

3.2 You can change the name of log file to anything as follows:

      $ export ORACLE_SID=<instance_name>
      $ sqlplus / as sysdba
      SQL> update utl.tb_config
              set string_value='<new_log_name>'
            where variable='LogFileName';
      SQL> commit;
      SQL> quit

    Ensure the UTL_FILE parameters are set up as described in [1.2]

    Also, amend the logrotate.conf file as described in [4.2]

3.3 If the log file does not exist in the desired location, it could be that
    logging has been turned off. There are 4 levels of logging:

      None    =0 No logging
      Basic   =1 Default - warnings and errors
      Verbose =2 Information about processes
      Debug   =3 Very verbose, including process statistics

3.4 You can change the level logging as follows:

      $ export ORACLE_SID=<instance_name>
      $ sqlplus / as sysdba
      SQL> update utl.tb_config
              set int_value=<0,1,2 or3>
            where variable='LogLevel';
      SQL> commit;
      SQL> quit

3.5 Event logging targets can be any combination of the following:

     TABLE    Output to table utl.tb_logger
     FILE     Log file output as described above
     OUTPUT   Console output. This will be discarded during production run.
              This should only be enabled on development systems.

3.6 You can change the logging target to, say, TABLE and FILE as follows:

      $ export ORACLE_SID=<instance_name>
      $ sqlplus / as sysdba
      SQL> update utl.tb_config
              set string_value='TABLE FILE'
            where variable='LogTargetType';
      SQL> commit;
      SQL> quit


4. Too many / too few logfiles are kept
--------------
4.1 A Logfiles rotation feature should be installed on the server. Check that
    the file logrotate.conf is in $ORACLE_BASE/admin/$ORACLE_SID/log.
    This configuration file describes how old log files are treated: by default
    the current log file is given the extension '1', the previous log files
    have their file extension incremented by 1, and a new blank log file is
    created. Files with an extension >= 2 are gzipped. 35 such files are
    maintained. File with an extension > 35 are deleted.

4.2 You can edit the logrotate.conf file and amend of the above decribed
    values. If you change the name of the log file from the default 'events'
    as described in [3.2], then you should change this here too.

      $ nano $ORACLE_BASE/admin/$ORACLE_SID/log/logrotate.conf


5. Log file rotation does not seem to work
--------------
5.1 The logrotation is run daily and controlled by a cron job.

5.2 Check that the cron-daemon is running:

      $ ps -ef | grep crond
      root      1564     1  0 Jul17 ?        00:00:00 crond

   If the cron-daemon is not running, start it:

      $ su
      Password:
      $ /etc/init.d/crond start
      $ exit

   Check that it started correctly:

      $ /etc/init.d/crond status
      crond (pid 1564) is running...

5.3 Check that the logrotate program is visible stalled on the server.
    It normally resides in /usr/sbin:

      $ ls -alc /usr/sbin/logrotate
      -rwxr-xr-x    1 root     root     37764 May  5 13:38 /usr/sbin/logrotate


5.4 Check the content of user 'oracle''s table of cron jobs, and add the
    logrotate job if it is  not there:

      $ export EDITOR=nano
      $ crontab -e

    This will display a line for each cron job. Find the line for the
    logrotate job, which by default will run at 5 minutes past midnight.
    It should look something like the following:

      05 0 * * * /usr/sbin/logrotate -s
        /u01/app/oracle/admin/<instance_name>/log/logrotate.status
        /u01/app/oracle/admin/<instance_name>/log/logrotate.conf

    Make any changes and save the file. It is not necessary to restart the
    cron-daemon.

6. Oracle service control script does not work
--------------
6.1 If you have elected during the installation to install the Oracle service
    control script 'oracle' in /etc/init.d/, then you should be able to start
    and stop all the Oracle instances on the server using this script:

      $ su
      Password:
      $ /etc/init.d/oracle stop
      $ /etc/init.d/oracle start
      $ /etc/init.d/oracle status
      $ exit

    This control script does not only control the Oracle instance(s) on the
    server, but also controls the Oracle listener service.

6.2 If there are multiple Oracle instances on the server that need to be
    controlled by this script, their names (a.k.a. ORACLE_SID's) can be defined
    in an environment variable ORACLE_SIDS as a space-delimited list. This is
    best set up in user 'oracle''s .bash_profile file (assuming that user
    'oracle''s preferred shell is /bin/bash):

      $ nano ~oracle/.bash_profile

    Add the following line and save the file:

      export ORACLE_SIDS="<instance_name1> <instance_name2> etc.."

    All instances will now simultaneously be started and stopped through this
    service control script. If you only want to control one instance at a time,
    specify it as a second parameter, e.g.

      $ /etc/init.d/oracle start <instance_name2>

6.3 The Oracle control script can be set up to be run when the server boots up
    and to cleanly shut down the Oracle database when the server shuts down.
    This is done as follows:

      $ su
      Password:
      $ chkconfig --list 345 --add /etc/init.d/oracle
      $ exit

    Various X-based utilities exit to view and control all the system services
    from a grahpical front-end, such as Redhat Linux's 'serviceconf'.

7. Cannot start up the Oracle database
--------------
7.1 If the Oracle service control script is not able to start the selected
    database instance up, there may be a number of reasons for this, and to
    fix this would mostly require the assistance of an Oracle DBA. Some basic
    remedies are described below.

7.2 Ensure that the instance name set in the environment variable ORACLE_SID
    is correct. If not, correct it in the file ~oracle/.bash_profile - you
    should have a line similar to the following:

      export ORACLE_SID=<instance_name>

7.3 Check that you are can perform the following on the server logged in as
    user 'oracle':

    $ export ORACLE_SID=<instance_name>
    $ sqlplus / as sysdba
    Connected to an idle instance.
    SQL> startup

7.4 If on starting up you get the following error:

      ORA-03113: end-of-file on communication channel

    or

      ORA-24324: service handle not initialized
      ORA-01041: internal error. hostdef extension doesn't exist
      cause: The cause of this problem is still undetermined.

    - then the database's binary server parameter file (SPFILE) may have been
    corrupted. It can only be fixed by regenerating it.

7.5 Verify that the text-version of the database's parameter file (PFILE) is
    intact. This file usually resides in
    /u01/app/oracle/admin/<instance_name>/pfile/init<instance_name>.ora.

7.6 Start the database up using this PFILE.

      $ sqlplus / as sysdba
      SQL> startup pfile=/u01/app/oracle/admin/.../init<instance_name>.ora.

7.7 If the instance does not start up, then the content of the PFILE file is
    incorrect.

7.8 Regenerate the SPFILE

      SQL> create spfile from pfile;
      File created.

7.9 Restart the database, this time without having to specify the PFILE:

      SQL> shutdown immediate
      ORACLE instance shut down.
      SQL> startup
      ORACLE instance started.

8. Oracle system commands do not work
--------------
8.1 System commands that begin with 'alter system...' and can normally only
    be executed by the Oracle system user, 'sys'.

8.2 If a system command produces the error:

      ORA-27046: file size is not a multiple of logical block size

    then the SPFILE may be corrupted. Refer to [7] for a remedy.

9. Cannot connect to remote database
--------------
9.1 Although it is possible to connect to the database on the server through
    any schema, when attempting to connect from a remote client an error is
    displayed. In all cases, do the following:

    * Check that the Oracle client software has been installed and that a path
      exists to the bin-directory in which sqlplus.exe and tnsping.exe reside.

    * The tnsnames.ora file in the Oracle client installation's network/admin-
      directory should contain valid references the database and the server
      that it runs on.

    * If there are multiple Oracle client installations on the client with
      that own tnsnames.ora files, remove any doubt for the time being by
      keeping them identical.

9.2 ORA-12541: TNS:no listener

    The listener is either no visible from the client, or is not running on
    the Oracle server.

9.3 Check that the Oracle server is running by pinging it:

    C:\> ping <server_name>

    - which should return:

    Pinging <server_name>.<domain_name> <IP address> with 32 bytes of data:

    Reply from <IP address>: bytes=32 time<1ms TTL=64
    etc..

    If this is not the case, then check that the server is running and there
    are no network issues that would prevent you from connecting to the
    server.

9.4 You should be able to connect to the server over SSH (see section [11]),
    telnet, or X-Windows (see section [12]). Establish such a connection before
    proceding.

9.4 Check that the listener service on the server is running by typing the
    following on the server:

      $ lsntctl status

    - which returns the following if the listener is running:

      Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC)))
      STATUS of the LISTENER
      ------------------------
      Alias                     LISTENER
      Version                   TNSLSNR for Linux: Version 10.1.0.2.0 - Production
      Start Date                28-JUL-2004 21:06:50
      Uptime                    0 days 0 hr. 0 min. 9 sec
      Trace Level               off
      Security                  ON: Local OS Authentication
      SNMP                      OFF
      Listener Parameter File   /opt/oracle/product/10g/network/admin/listener.ora
      Listener Log File         /opt/oracle/product/10g/network/log/listener.log
      Listening Endpoints Summary...
        (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC)))
        (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=0.0.0.0)(PORT=1521)))
      Services Summary...
      Service "PLSExtProc" has 1 instance(s).
        Instance "PLSExtProc", status UNKNOWN, has 1 handler(s) for this service...

9.5 If the listener service on the database server is not running, start the
    listener up as follows:

      $ lsnrctl start

    - and verify that it is running:

      $ lsntctl status

9.6 Verify that there are no firewall or network problems by running the
    following from the client machine or a machine on the same network segment
    that as 'nmap' installed (www.insecure.org)

      $ nmap -p 1521 <server_name>

    If the listener is from the client network, you should get the following:

      Starting nmap 3.48 ( http://www.insecure.org/nmap/ ) at 2004-08-03 10:01
      Interesting ports on <server_name>.<domain_name> (<IP address>):
      PORT     STATE SERVICE
      1521/tcp open  oracle

    If the following is displayed:

      Starting nmap 3.48 ( http://www.insecure.org/nmap/ ) at 2004-08-03 10:03 BST
      Interesting ports on <server_name>.<domain_name> (<IP address>):
      PORT     STATE  SERVICE
      1521/tcp closed oracle

    - then, even though the Oracle listener service is running on the server,
    a firewall is blocking the port 1521 (the standard Oracle listener port).
    Refer to a network administrator to unblock port 1521, or to a Unix system
    administrator to unblock port 1521 on the server.

9.7 ORA-12514 TNS listener could not resolve service_name in connect descriptor.

9.8 From the remote client, tnsping the database:

      C:\> tnsping <instance_name>

      Used TNSNAMES adapter to resolve the alias
      Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTO
      COL = TCP)(HOST = oracle1)(PORT = 1521))) (CONNECT_DATA = (SERVICE_NAM
      E = venom1)))
      OK (10 msec)

    This indicates that the listener on the database server is running.

9.9 If the following response is received:

      TNS-03505: Failed to resolve name

    - then the instance name does not exist in the tnsnames.ora file as
    described in [9.1]. Correct the file and retest this.

9.8 If the following response is received:

    Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTO
    COL = TCP)(HOST = oracle1)(PORT = 1521))) (CONNECT_DATA = (SERVICE_NAM
    E = venom1)))
    TNS-12541: TNS:no listener

    - then the listener service on the database server is not running. Start
    the listener up as follows:

      $ lsnrctl start

    - and verify that the listener is running as in [9.4]

      $ lsntctl status

9.9 Check the contents of the file on the server:
      /u01/app/oracle/product/10.0.1/db_1/network/admin/listener.ora

    If the file contains a '(HOST = <DNS name>)' statement, change the DNS name
    to the server's IP address. This is a way of circumventing a bug in
    Oracle Release 10.1. If DHCP provides the IP address, set it to:
    (HOST = 0.0.0.0) and restart the listener service:

      $ lsnrctl stop
      $ lsnrctl start

9.10 If the following error appears when attempting to connect to the database
    from a remote client

      ORA-12516: TNS:listener could not find available handler with matching
      protocol stack

    - verify the content of the file
    /u01/app/oracle/product/10.0.1/db_1/network/admin/sqlnet.ora


9.11 Desparate course of Action 1
    Elegantly restart the database from the server console:

      $ su - oracle
      Password:
      $ sqlplus / as sysdba
      SQL> shutdown immediate
      ORACLE instance shut down
      SQL> startup
      ORACLE instance started

9.12 Desparate course of Action 2
    Abort the database and restart from the server console if an elegant
    shutdown seems to hang:

      $ su - oracle
      Password:
      $ sqlplus / as sysdba
      SQL> shutdown abort
      ORACLE instance shut down
      SQL> startup
      ORACLE instance started

    - and restart it elegantly

      SQL> shutdown immediate
      ORACLE instance shut down
      SQL> startup
      ORACLE instance started

9.13 Desparate course of Action 3
    Delete the sqlnet.ora file on both the server and the clients. This will
    cause both server and client to unambigously connect using TNSNAMES
    definitions, as set up in the tnsnames.ora file on both client and server.

9.14 Desparate course of Action 4
    Check that the server's tnsnames.ora file refers to the hostnames or
    IP addresses, rather than 'localhost'. Then, copy the server's
    tnsnames.ora to the client's tnsnames.ora file. This will remove a further
    degree of doubt.

10. I get an error message that I don't understand
--------------
10.1 Oracle error messages are in the form of <group>-<number>, where <group>
    is a 3-letter code and <number> is a 5-digit code. To get the meaning and
    (sometimes) the cause of an Oracle error message, enter the  following:

      $ oerr <group> <number>

11. Cannot connect remotely over SSH
--------------
11.1 A frequently-used Windows program to connect to Unix servers is putty.exe.

11.2 Check that the username and the password are valid by trying it out on the
    server console.

11.2 Check that the SSH daemon on the server is running:

      $ su
      Passwd:
      $ /etc/init.d/sshd status
      $exit

11.3 Start the SSH daemon if it is not running

      $ su
      Passwd:
      $ /etc/init.d/sshd start
      $exit

11.4 The /etc/ssh/ssh_config file may have been misconfigured. It should
    contain at least the lines:

      Host *
      ForwardX11 yes

11.5 The /etc/ssh/sshd_config file may have been misconfigured. It should
    contain at least the line:

      X11Forwarding yes

    If in doubt, ensure that this is the only line in this file in case of
    conflicting settings by issuing the following command:

      $ su
      Password:
      $ echo "X11Forwarding yes" > /etc/ssh/sshd_config
      $ exit

11.6 Restart the SSH daemon to effect any changes to the sshd_config file:

      $ su
      Passwd:
      $ /etc/init.d/sshd restart
      $exit

12. Cannot start a remote X-Windows session on a Windows PC
--------------
12.1 A frequently-used MS-Windows program to run X-Windows sessions on the PC
    is XWin32 from www.starnet.com. This causes the Win32 PC to act as an
    X-Windows server that receives display commands from the Unix server.
    The following fault finding technique is based on this product.

12.2 Check that the username and the password that you log through the X11
    session are valid by trying the username and password out on a text-based
    console session.

12.3 The preferred way to connect to a remote server is over SSH.
    To resolve SSH connectivity issues, refer to [11].

12.4 The host name or IP address of the server should be set up in the X-host
    list on the Security tab of the XWin32 configuration program. Also tick
    the Access Control box.

12.5 Restart the XWin32 server and accept all connections from
    localhost(127.0.0.1).

13. Install scripts do not want to run
--------------
13.1 If you get the error when running a script

      : bad interpreter: No such file or directory

    - then the file is probably still in DOS-mode and needs to be converted to
    Unix mode using the following command:

      $ dos2unix <filename>

13.2 If you get the error

      -bash: ./<filename>: Permission denied

    - then the file has not been set to executable mode and can be set as
    follows:

      $ chmod +x <filename>

--------------
End.